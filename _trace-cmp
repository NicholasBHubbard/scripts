#!/usr/bin/perl

use strict;
use warnings;
use v5.16;
use autodie;
use Getopt::Long;

GetOptions(
    'count|c=i'   => \(my $INSTR_COUNT = 0),
    'cmp-bef|B=i' => \(my $BEFORE_RANGE = 10),
    'cmp-aft|A=i' => \(my $AFTER_RANGE = 10)
);

die "_trace-cmp [opts..] TARGET_INSTR_ADDR MAME_TRACE MAME_REGEX MEGAMU_TRACE MEGAMU_REGEX\n" 
	unless @ARGV == 5;

my ($TARGET_INSTR_ADDR, $MAME_TRACE, $MAME_RX, $MEGAMU_TRACE, $MEGAMU_RX) = @ARGV;

main();

sub main {
    open my $mame_fh, '<', $MAME_TRACE;
    open my $megamu_fh, '<', $MEGAMU_TRACE;

	chomp(my @mame_instrs =  grep { my @_v = mame_parse_instr($_); @_v > 0 } <$mame_fh>);
	chomp(my @megamu_instrs = grep { my @_v = megamu_parse_instr($_); @_v > 0 } <$megamu_fh>);

	my $mame_count = 0;
	my $mame_instr_idx;
	for (my $i = 0; $i < @mame_instrs; $i++) {
		my ($addr) = mame_parse_instr($mame_instrs[$i]);
		if (hex($addr) == hex($TARGET_INSTR_ADDR)) {
			if ($mame_count == $INSTR_COUNT) {
				$mame_instr_idx = $i;
				last;
			} else { $mame_count++ }
		}
	}
	die "could not find instr $TARGET_INSTR_ADDR in file '$MAME_TRACE'\n" unless defined $mame_instr_idx;
	my $mame_lower_idx = $mame_instr_idx - $BEFORE_RANGE;
	$mame_lower_idx = 0 if $mame_lower_idx < 0;
	my $mame_upper_idx = $mame_instr_idx + $BEFORE_RANGE;
	$mame_upper_idx = @mame_instrs-1 if $mame_upper_idx >= @mame_instrs;
	my @mame_instr_slice = @mame_instrs[$mame_lower_idx..$mame_upper_idx];

	my $megamu_count = 0;
	my $megamu_instr_idx;
	for (my $i = 0; $i < @megamu_instrs; $i++) {
		my ($addr) = megamu_parse_instr($megamu_instrs[$i]);
		if (hex($addr) == hex($TARGET_INSTR_ADDR)) {
			if ($megamu_count == $INSTR_COUNT) {
				$megamu_instr_idx = $i;
				last;
			} else { $megamu_count++ }
		}
	}
	die "could not find instr $TARGET_INSTR_ADDR in file '$MEGAMU_TRACE'\n" unless defined $megamu_instr_idx;
	my $megamu_lower_idx = $megamu_instr_idx - $BEFORE_RANGE;
	$megamu_lower_idx = 0 if $megamu_lower_idx < 0;
	my $megamu_upper_idx = $megamu_instr_idx + $BEFORE_RANGE;
	$megamu_upper_idx = @megamu_instrs-1 if $megamu_upper_idx >= @megamu_instrs;
	my @megamu_instr_slice = @megamu_instrs[$megamu_lower_idx..$megamu_upper_idx];

	say ' 'x10, 'MAME', ' 'x20, '|', ' 'x10, 'MEGAMU', ' 'x22;
	say '-'x79;
	my $max = @mame_instr_slice; 
	$max = @megamu_instr_slice if @megamu_instr_slice > @mame_instr_slice;
	for (my $i = 0; $i < $max; $i++) {
		my $mame_instr = $mame_instr_slice[$i];
		my $megamu_instr = $megamu_instr_slice[$i];
		printf "%-33s | %-20s\n", $mame_instr, $megamu_instr;
    }
}

sub mame_parse_instr {
	my $instr = shift;
	if (my ($addr, $op) = $instr =~ $MAME_RX) {
		return ($addr, $op);
	}
	return ();
}

sub megamu_parse_instr {
	my $instr = shift;
	if (my ($addr, $op) = $instr =~ $MEGAMU_RX) {
		return ($addr, $op);
	}
	return ();
}
